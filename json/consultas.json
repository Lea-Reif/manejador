[{"nombreConsulta":"Consultas para la version 3.2","descripcion":"Exacto","fecha":"2019-11-22","consulta":"\nDROP procedure IF EXISTS `Cerrarbash`;\n\nDELIMITER $$\n\nCREATE  PROCEDURE `Cerrarbash`(id_bash int,fecha datetime,ingresos decimal(8,2),\ngastos decimal(8,2),impuestos decimal(8,2),cedula varchar(45), id_sucursal int,_fondos decimal(8,2)\n,_saldar decimal(8,2),_ingresos_impuesto decimal(8,2))\nBEGIN\n\n\/*Insertar el total de facturas por tipo de pagos *\/\ndeclare _tfacturacontado decimal (8,2);\ndeclare _tfacturacredito decimal (8,2);\ndeclare _tfacturachequeTra decimal (8,2);\n\nset _tfacturacontado=(select Get_TotalFactura(id_sucursal,'Al contado')as TotalContado);\nset _tfacturacredito=(select Get_TotalFactura(id_sucursal,'Cr\u00e9dito')as TotalContado);\nset _tfacturachequeTra=(select Get_TotalFactura(id_sucursal,'Cheque o transf')as TotalContado);\n\n\/*Insertando al bash los datos*\/\ninsert into bash values(date_format(fecha,'%Y%m%d'),\nfecha,ingresos,gastos,impuestos,cedula,id_sucursal,null,_fondos,_saldar,\n_ingresos_impuesto,_tfacturacontado,_tfacturacredito,_tfacturachequeTra);\n\nEND$$\n\nDELIMITER ;\n\nDROP TRIGGER IF EXISTS `TG_Facturas_contado`;\n\nDELIMITER $$\nCREATE  trigger TG_Facturas_contado after insert on facturas \n for each row\n begin \n declare Id_sucur int;\n set Id_sucur=(select usuarios.id_sucursal from facturas inner join usuarios on facturas.cedula_usuario=usuarios.cedula where facturas.Id_facturas= new.Id_facturas);\n if(New.Tipo_pago='Al contado')then\n\tINSERT INTO ingresos (Fecha,Cantidad,Tipo,idrefencia,idsucursal)value(new.fecha_registro,new.Total_Factura,'factura al contado',new.Id_facturas,Id_sucur);\n end if;\n  if(New.Tipo_pago='Cheque o transf')then\n\tINSERT INTO ingresos (Fecha,Cantidad,Tipo,idrefencia,idsucursal)value(new.fecha_registro,new.Total_Factura,'factura transferencia o cheque',new.Id_facturas,Id_sucur);\n end if;\n   if(New.Tipo_pago='Cr\u00e9dito')then\n\tINSERT INTO ingresos (Fecha,Cantidad,Tipo,idrefencia,idsucursal)value(new.fecha_registro,new.Total_Factura,'factura a Cr\u00e9dito',new.Id_facturas,Id_sucur);\n end if;\n end\nDELIMITER ;\n\nDROP TRIGGER IF EXISTS `TG_CuentasDiarias_Abonos`;\n\nDELIMITER $$\n\nCREATE  trigger TG_CuentasDiarias_Abonos after insert on abonos \n for each row\n begin \n declare Id_sucur int;\n set Id_sucur=(select usuarios.id_sucursal from abonos inner join usuarios on abonos.Usuario=usuarios.cedula where idAbonos= new.idAbonos);\n\tINSERT INTO ingresos (Fecha,Cantidad,Tipo,idrefencia,idsucursal)value(new.Fecha,new.Abonado,concat('Abono ',new.Tipo_abono),new.idAbonos,Id_sucur);\n end;$$\nDELIMITER ;\n\n\nDROP procedure IF EXISTS `ConfirmarPagos_pagados`;\n\nDELIMITER $$\n\nCREATE PROCEDURE `ConfirmarPagos_pagados`(idcuenta int, \ntipo_pagos varchar(15),cedula varchar(30),_tpago varchar(45),_nocuenta varchar(45))\nBEGIN\ndeclare fecha,cierre datetime;\ndeclare periodos varchar(15);\n\nset fecha=(select Fecha_registro from cuentaspagar where idcuentaspagar=idcuenta);\nset cierre=(select Fecha_cierre from cuentaspagar where idcuentaspagar=idcuenta);\nset periodos=(select Periodo from cuentaspagar where idcuentaspagar=idcuenta);\n\ninsert into pagos(Usuario, Tipo_pago, Id_cuenta,tpago,noCuenta) \nvalue(cedula,tipo_pagos,concat('cp',idcuenta),_tpago,_nocuenta);\n\nif(tipo_pagos='Pago recurrente')then\nif (periodos='Semanal')then\nupdate cuentaspagar set Fecha_registro= date_add(fecha,INTERVAL 7 DAY),Fecha_cierre=date_add(cierre,INTERVAL 7 DAY)  where idcuentaspagar=idcuenta;\nend if;\nif( periodos='Mensual') then\nupdate cuentaspagar set Fecha_registro= date_add(fecha,INTERVAL 1 Month),Fecha_cierre=date_add(cierre,INTERVAL 1 month)  where idcuentaspagar=idcuenta;\nend if;\n if(periodos='Quincenal')then\nupdate cuentaspagar set Fecha_registro= date_add(fecha,INTERVAL 15 Day),Fecha_cierre=date_add(cierre,INTERVAL 15 DAY)  where idcuentaspagar=idcuenta;\nend if;\nif(periodos='Anual')then\nupdate cuentaspagar set Fecha_registro= date_add(fecha,INTERVAL 1 year),Fecha_cierre=date_add(cierre,INTERVAL 1 year) where idcuentaspagar=idcuenta;\nend if;\nelse \nupdate cuentaspagar set Estado_cuenta='Inactiva' where idcuentaspagar=idcuenta;\nend if;\nEND;$$\n\nDELIMITER ;\n\n\nDROP procedure IF EXISTS `ConfirmarPagos`;\n\nDELIMITER $$\n\nCREATE  PROCEDURE `ConfirmarPagos`(idcuenta int, tipo_pagos \nvarchar(15),cedula varchar(30),fecha_p datetime,_tpago varchar(45),_nocuenta varchar(45))\nBEGIN\ndeclare fecha,cierre datetime;\ndeclare periodos varchar(15);\n\nset fecha=(select Fecha_registro from cuentascobros where Id_cobros=idcuenta);\nset cierre=(select Fecha_cierre from cuentascobros where Id_cobros=idcuenta);\nset periodos=(select Periodo from cuentascobros where Id_cobros=idcuenta);\n\ninsert into pagos(Usuario, Tipo_pago, Id_cuenta,Fecha_pago,tpago,noCuenta) \nvalue(cedula,tipo_pagos,concat('cc',idcuenta),fecha_p,_tpago,_nocuenta);\n\nif(tipo_pagos='Pago recurrente')then\nif (periodos='Semanal')then\nupdate cuentascobros set Fecha_registro= date_add(fecha,INTERVAL 7 DAY),Fecha_cierre=date_add(cierre,INTERVAL 7 DAY)  where Id_cobros=idcuenta;\nend if;\nif( periodos='Mensual') then\nupdate cuentascobros set Fecha_registro= date_add(fecha,INTERVAL 1 Month),Fecha_cierre=date_add(cierre,INTERVAL 1 month)  where Id_cobros=idcuenta;\nend if;\n if(periodos='Quincenal')then\nupdate cuentascobros set Fecha_registro= date_add(fecha,INTERVAL 15 Day),Fecha_cierre=date_add(cierre,INTERVAL 15 DAY)  where Id_cobros=idcuenta;\nend if;\nif(periodos='Anual')then\nupdate cuentascobros set Fecha_registro= date_add(fecha,INTERVAL 1 year),Fecha_cierre=date_add(cierre,INTERVAL 1 year) where Id_cobros=idcuenta;\nend if;\nelse \nupdate cuentascobros set Estado_cuenta='Inactiva' where Id_cobros=idcuenta;\nend if;\nEND$$\n\nDELIMITER ;\n\nDROP TRIGGER IF EXISTS `TG_CuentasDiarias_Pagos`;\n\nDELIMITER $$\n\nCREATE  trigger TG_CuentasDiarias_Pagos after insert on pagos \n for each row\n begin \n declare tipo varchar(45);\n declare _tipo varchar(45);\n declare _proveedor varchar(25);\n declare _cuenta varchar(45);\n declare _conceto text;\n declare cantidad decimal(8,2);\n declare Id_sucur int;\n set Id_sucur=(select usuarios.id_sucursal from pagos inner join usuarios on pagos.Usuario=usuarios.cedula where idPagos= new.idPagos);\n\nif(substring(new.Id_cuenta,1,2)='cc')then\nset cantidad=(select Total_cuenta from cuentascobros where concat('cc',Id_cobros)=new.Id_cuenta);\nset tipo=concat('Cuentas por cobrar ',new.tpago);\n\n INSERT INTO ingresos (Fecha,Cantidad,Tipo,idrefencia,idsucursal)\n value(new.Fecha_pago,cantidad,tipo,new.Id_cuenta,Id_sucur);\n\n\/*Verificando si fue a transferencia bancaria para afectar la tabla transferencia y confirmar el Credito*\/\nif(new.tpago='Transferencia Bancaria')then\ninsert into transferencia values(null,new.noCuenta,now(),'Confirmada','Credito',cantidad,\nconcat('Transferencia de ',tipo),new.Id_cuenta,0);\n\nupdate banking set balance=balance+cantidad where ncuenta=new.noCuenta;\nend if;\nelse\nset cantidad=(select Total_cuenta from cuentaspagar where concat('cp',idcuentaspagar)=new.Id_cuenta);\nset _conceto=(select Concepto from cuentaspagar where concat('cp',idcuentaspagar)=new.Id_cuenta);\nset _proveedor=(select Nombre_proveedor from proveedores join cuentaspagar on proveedores.idProveedores=cuentaspagar.Id_proveedor where concat('cp',idcuentaspagar)=new.Id_cuenta);\nset _tipo=concat('Cuentas por pagar ',new.tpago);\n\n\/*Verificando si fue a transferencia bancaria para afectar la tabla transferencia y confirmar el debito*\/\nif(new.tpago='Transferencia Bancaria')then\ninsert into transferencia values(null,new.noCuenta,now(),'Confirmada','Debito',cantidad,\nconcat('Transferencia de ',_tipo),new.Id_cuenta,0);\n\nupdate banking set balance=balance-cantidad where ncuenta=new.noCuenta;\nend if;\ninsert into gastos_menores(descripcion,suplidor,tipo,hora,monto,estado,idsucursal,idbash) \nvalues(_conceto,_proveedor,_tipo,hour(now()),cantidad,'activo',Id_sucur,DATE_FORMAT(now(),\"%Y%m%d\"));\nend if;\n end;$$\nDELIMITER ;\n\n"},{"nombreConsulta":"Somimo","descripcion":"as","fecha":"2019-11-22","consulta":"holis"},{"nombreConsulta":"Papos","descripcion":"Crear tabla papo","fecha":"2020-04-30","consulta":"create table papo(\nid int)"}]